name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

env:
  DATABASE_URL: postgres://sip:sip@localhost/sip
  PGPASSWORD: sip

jobs:
  php-cs-fixer:
    name: PHP-cs-fixer (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - "8.1"
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer, php-cs-fixer
          coverage: none
      - name: Run PHP-CS-Fixer fix
        run: php-cs-fixer fix --dry-run --diff --ansi

  phpstan:
    name: PHPStan (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '8.1'
      fail-fast: false
    env:
      APP_DEBUG: '1' # https://github.com/phpstan/phpstan-symfony/issues/37
      SYMFONY_PHPUNIT_VERSION: '9.5'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring
          coverage: none
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      - name: Install PHPUnit
        run: vendor/bin/simple-phpunit --version
      - name: Cache PHPStan results
        uses: actions/cache@v2
        with:
          path: /tmp/phpstan
          key: phpstan-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            phpstan-php${{ matrix.php }}-
            phpstan-
        continue-on-error: true
      - name: Clear test app cache
        run: |
          rm -Rf tests/Fixtures/app/var/cache/*
          tests/Fixtures/app/console cache:warmup
      - name: Run PHPStan analysis
        env:
          SYMFONY_PHPUNIT_VERSION: '9.5'
        run: |
          ./vendor/bin/phpstan --version
          ./vendor/bin/phpstan analyse --no-interaction --no-progress --ansi

  behat:
    name: Behat (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - "8.1"
          - "8.2"
        include:
          - php: "8.1"
            coverage: true
          - php: "8.2"
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup postgres
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER sip WITH PASSWORD 'sip' CREATEDB"
          createdb -h localhost -p 5432 -U sip sip
          pg_isready -d sip -h localhost -p 5432 -U sip
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring, pdo_sqlite
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      - name: Preparing database
        run: |
          bin/console lexik:jwt:generate-keypair
          bin/console doctrine:database:create --env=test
          bin/console doctrine:schema:create --env=test
      - name: Run Behat tests
        run: |
          mkdir -p build/logs/behat
          if [ "$COVERAGE" = '1' ]; then
            vendor/bin/behat --out=std --format=progress --format=junit --out=build/logs/behat/junit --profile=coverage --no-interaction
          else
            vendor/bin/behat --out=std --format=progress --format=junit --out=build/logs/behat/junit --profile=default --no-interaction
          fi
      - name: Merge code coverage reports
        if: matrix.coverage
        run: |
          wget -qO /usr/local/bin/phpcov https://phar.phpunit.de/phpcov.phar
          chmod +x /usr/local/bin/phpcov
          mkdir -p build/coverage
          phpcov merge --clover build/logs/behat/clover.xml build/coverage
        continue-on-error: true
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: behat-logs-php${{ matrix.php }}
          path: build/logs/behat
        continue-on-error: true
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v3
        with:
          directory: build/logs/behat
          name: behat-php${{ matrix.php }}
          flags: behat
          fail_ci_if_error: true
