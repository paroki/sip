security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        
    providers:
        users:
            entity:
                class: SIP\Security\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            stateless: true
            provider: users
            json_login:
                check_path: auth_login # The name in routes.yaml is enough for mapping
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~

    access_control:
        - { path: ^/$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI docs
        - { path: ^/greetings, roles: PUBLIC_ACCESS }
        - { path: ^/auth/$, roles: PUBLIC_ACCESS }
        - { path: ^/auth/check, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/auth/profile, roles: IS_AUTHENTICATED_FULLY }
    
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_KEUSKUPAN_ADMIN, ROLE_PAROKI_ADMIN]
        ROLE_KEUSKUPAN_ADMIN: [ROLE_KEUSKUPAN_USER, ROLE_ADMIN]
        ROLE_KEUSKUPAN_USER: ROLE_USER
        ROLE_PAROKI_ADMIN: [ROLE_PAROKI_USER, ROLE_ADMIN]
        ROLE_PAROKI_USER: ROLE_USER
        

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
